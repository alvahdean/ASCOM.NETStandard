// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using RACI.Data;
using System;

namespace EFTool.Migrations
{
    [DbContext(typeof(RaciModel))]
    partial class RaciModelModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("RACI.Data.ProfileNode", b =>
                {
                    b.Property<int>("ProfileNodeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentProfileNodeId");

                    b.Property<string>("ProfileType")
                        .IsRequired();

                    b.HasKey("ProfileNodeId");

                    b.HasIndex("ParentProfileNodeId", "Name")
                        .IsUnique();

                    b.ToTable("ProfileNodes");

                    b.HasDiscriminator<string>("ProfileType").HasValue("ProfileNode");
                });

            modelBuilder.Entity("RACI.Data.ProfileValue", b =>
                {
                    b.Property<int>("ProfileValueId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.Property<int>("ParentProfileNodeId");

                    b.Property<string>("Value");

                    b.HasKey("ProfileValueId");

                    b.HasIndex("ParentProfileNodeId", "Key")
                        .IsUnique();

                    b.ToTable("ProfileValues");
                });

            modelBuilder.Entity("RACI.Data.SimpleValue", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.HasKey("Key");

                    b.ToTable("SimpleValues");
                });

            modelBuilder.Entity("RACI.Data.AscomDeviceNode", b =>
                {
                    b.HasBaseType("RACI.Data.ProfileNode");


                    b.ToTable("AscomDeviceNode");

                    b.HasDiscriminator().HasValue("AscomDeviceNode");
                });

            modelBuilder.Entity("RACI.Data.AscomDriverNode", b =>
                {
                    b.HasBaseType("RACI.Data.ProfileNode");


                    b.ToTable("AscomDriverNode");

                    b.HasDiscriminator().HasValue("AscomDriverNode");
                });

            modelBuilder.Entity("RACI.Data.AscomPlatformNode", b =>
                {
                    b.HasBaseType("RACI.Data.ProfileNode");


                    b.ToTable("AscomPlatformNode");

                    b.HasDiscriminator().HasValue("AscomPlatformNode");
                });

            modelBuilder.Entity("RACI.Data.AscomSettingsNode", b =>
                {
                    b.HasBaseType("RACI.Data.ProfileNode");


                    b.ToTable("AscomSettingsNode");

                    b.HasDiscriminator().HasValue("AscomSettingsNode");
                });

            modelBuilder.Entity("RACI.Data.RaciSettings", b =>
                {
                    b.HasBaseType("RACI.Data.ProfileNode");


                    b.ToTable("RaciSettings");

                    b.HasDiscriminator().HasValue("RaciSettings");
                });

            modelBuilder.Entity("RACI.Data.RaciSystem", b =>
                {
                    b.HasBaseType("RACI.Data.ProfileNode");

                    b.Property<string>("Hostname");

                    b.ToTable("RaciSystem");

                    b.HasDiscriminator().HasValue("RaciSystem");
                });

            modelBuilder.Entity("RACI.Data.RaciUser", b =>
                {
                    b.HasBaseType("RACI.Data.ProfileNode");

                    b.Property<string>("HomeDir");

                    b.Property<string>("UserId");

                    b.ToTable("RaciUser");

                    b.HasDiscriminator().HasValue("RaciUser");
                });

            modelBuilder.Entity("RACI.Data.ProfileNode", b =>
                {
                    b.HasOne("RACI.Data.ProfileNode", "Parent")
                        .WithMany("Nodes")
                        .HasForeignKey("ParentProfileNodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RACI.Data.ProfileValue", b =>
                {
                    b.HasOne("RACI.Data.ProfileNode", "Parent")
                        .WithMany("Values")
                        .HasForeignKey("ParentProfileNodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
